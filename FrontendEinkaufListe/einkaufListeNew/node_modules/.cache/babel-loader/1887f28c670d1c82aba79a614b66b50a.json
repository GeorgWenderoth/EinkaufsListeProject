{"ast":null,"code":"var _jsxFileName = \"/Users/georgwenderoth/EinkaufsListe/groceryList/einkaufsliste/src/App.js\";\n\n/*import React, { useState } from \"react\";\nimport \"./App.css\"\nimport { v4 as uuidv4 } from \"uuid\";\nimport Item from \"./Item\";\n\nfunction App() {\n  const [item, setItem] = useState(\"\"); // was mache ich hier\n  const [list, setList] = useState([]);\n\n  const handleSubmit = (e) => {  // was macht e (eingabe?)\n    const newItem = {\n      id: uuidv4(), //generiert neine unice id\n      item: item,\n      complete: false,\n    };\n    e.preventDefault();\n    if (item) {\n      setList([...list, newItem]);\n      setItem(\"\");\n    }\n  };\n\n  const handleChange = (e) => {\n    setItem(e.target.value);\n  };\n\n  return (\n      <div className=\"App\">\n        <h1>Grocery List</h1>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" value={item} onChange={handleChange} />\n          <button type=\"submit\">ADD</button>\n        </form>\n      </div>\n  );\n}\n\nexport default App;\n*/\nimport axios from 'axios';\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Item from \"./Item\";\nimport { v4 as uuidv4 } from \"uuid\";\n/*const arr = () => {\n  let data = localStorage.getItem(\"data\");\n  //  return daten;\n  if (data) return JSON.parse(localStorage.getItem(\"data\")); // local storage muss raus\n  else return [];\n}; */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction back() {\n  const promise = axios.get('http://127.0.0.1:8080/einkaufsListeElemente');\n  const daten = promise.then(wert => ob.data = wert.data); // const daten = promise.data;\n\n  console.log(ob);\n  return ob;\n}\n\nfunction listenpunkt() {\n  const a = back();\n  const punkt = a.map(o => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: o\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this));\n  return punkt;\n}\n\nlet ob = {};\n\nclass App extends React.Component {\n  // es mit klasse versuchen\n  // const [item, setItem] = useState(\"\"); // was passiet hier\n  // const [list, setList] = useState(arr);\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      axios({\n        method: 'post',\n        url: 'http://127.0.0.1:8080/einkaufsListe',\n        data: {\n          \"itId\": 100,\n          \"einkaufsPunkt\": this.state.value,\n          \"strich\": false\n        }\n      });\n      /* console.log(test[1]);\n       const newItem = {\n         id: uuidv4(),\n         item: item,\n         complete: false,\n       };\n       console.log(newItem.id);\n       e.preventDefault();\n       if (item && item.length <= 25) {\n         setList([...list, newItem]);\n         setItem(\"\");\n       } */\n    };\n\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } //  const wertForm = null;\n\n  /*     const handleClickEvent = () => {\n          const form = wertForm.current\n           alert(`${form['punkt'].value}`)\n           console.log(form.value);\n       } */\n\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    }); //warum geschweifte klammern\n\n    console.log(this.state.value);\n  }\n\n  /* React.useEffect(() => {\n     localStorage.setItem(\"data\", JSON.stringify(list)); // in local storage gespeichert\n    }, [list]); */\n\n  /* const handleChange = (e) => {\n     setItem(e.target.value);\n     console.log(e.target.value);\n   }; */\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Grocery List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"inp\",\n          value: this.state.value,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: listenpunkt()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  }\n  /*   return (\n         <div className=\"App\">\n             <h1>Grocery List</h1>\n             <form onSubmit={handleSubmit}>\n                 <input\n                     className=\"input\"\n                     type=\"text\"\n                     value={item}\n                     placeholder=\"Enter the items\"\n                     onChange={handleChange}\n                 />\n                 <button className=\"btn\" type=\"submit\">\n                     Add Items\n                 </button>\n                 <br></br>\n                 <br></br>\n             </form>\n             <div>\n                 {list.map((c, id) => ( // ws macht er hier genau\n                     <Item\n                         key={id}\n                         id={c.id}\n                         item={item}\n                         list={list}\n                         setList={setList}\n                         complete={c.complete}\n                         setItem={setItem}\n                     />\n                 ))}\n             </div>\n         </div>\n     ); */\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/georgwenderoth/EinkaufsListe/groceryList/einkaufsliste/src/App.js"],"names":["axios","React","useState","Item","v4","uuidv4","back","promise","get","daten","then","wert","ob","data","console","log","listenpunkt","a","punkt","map","o","App","Component","constructor","props","handleSubmit","event","method","url","state","value","handleChange","bind","setState","target","render"],"mappings":"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","sourcesContent":["/*import React, { useState } from \"react\";\nimport \"./App.css\"\nimport { v4 as uuidv4 } from \"uuid\";\nimport Item from \"./Item\";\n\nfunction App() {\n  const [item, setItem] = useState(\"\"); // was mache ich hier\n  const [list, setList] = useState([]);\n\n  const handleSubmit = (e) => {  // was macht e (eingabe?)\n    const newItem = {\n      id: uuidv4(), //generiert neine unice id\n      item: item,\n      complete: false,\n    };\n    e.preventDefault();\n    if (item) {\n      setList([...list, newItem]);\n      setItem(\"\");\n    }\n  };\n\n  const handleChange = (e) => {\n    setItem(e.target.value);\n  };\n\n  return (\n      <div className=\"App\">\n        <h1>Grocery List</h1>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" value={item} onChange={handleChange} />\n          <button type=\"submit\">ADD</button>\n        </form>\n      </div>\n  );\n}\n\nexport default App;\n*/\n\nimport axios from 'axios';\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Item from \"./Item\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n/*const arr = () => {\n  let data = localStorage.getItem(\"data\");\n  //  return daten;\n  if (data) return JSON.parse(localStorage.getItem(\"data\")); // local storage muss raus\n  else return [];\n}; */\n\nfunction back () {\n    const promise = axios.get('http://127.0.0.1:8080/einkaufsListeElemente')\n    const daten = promise.then( wert => ob.data = wert.data)\n    // const daten = promise.data;\n    console.log(ob);\n    return ob;\n}\n\nfunction listenpunkt(){\n    const a = back();\n    const punkt = a.map((o) =>\n        <li>{o}</li>);\n    return punkt;\n}\n\nlet ob = {};\nclass App extends React.Component{ // es mit klasse versuchen\n // const [item, setItem] = useState(\"\"); // was passiet hier\n // const [list, setList] = useState(arr);\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n  //  const wertForm = null;\n/*     const handleClickEvent = () => {\n        const form = wertForm.current\n         alert(`${form['punkt'].value}`)\n         console.log(form.value);\n     } */\n\n\n\n\n\n     handleChange(event){\n       this.setState({value: event.target.value}) //warum geschweifte klammern\n         console.log(this.state.value);\n     }\n\n   handleSubmit = (event) =>{\n\n    axios({\n      method: 'post',\n      url: 'http://127.0.0.1:8080/einkaufsListe',\n      data: {\n        \"itId\": 100,\n        \"einkaufsPunkt\": this.state.value,\n        \"strich\": false\n      },\n    })\n\n   /* console.log(test[1]);\n    const newItem = {\n      id: uuidv4(),\n      item: item,\n      complete: false,\n    };\n    console.log(newItem.id);\n    e.preventDefault();\n    if (item && item.length <= 25) {\n      setList([...list, newItem]);\n      setItem(\"\");\n    } */\n  };\n /* React.useEffect(() => {\n    localStorage.setItem(\"data\", JSON.stringify(list)); // in local storage gespeichert\n\n  }, [list]); */\n /* const handleChange = (e) => {\n    setItem(e.target.value);\n    console.log(e.target.value);\n  }; */\n    render() {\n        return (\n            <div className=\"App\">\n                <h1>Grocery List</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <input type=\"text\" id=\"inp\" value={this.state.value} onChange={this.handleChange}/>\n                    <input type=\"submit\" value=\"Button\"/>\n                </form>\n                <ul>{listenpunkt()}\n                </ul>\n            </div>\n\n\n\n        )\n\n\n\n    }\n     /*   return (\n            <div className=\"App\">\n                <h1>Grocery List</h1>\n                <form onSubmit={handleSubmit}>\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        value={item}\n                        placeholder=\"Enter the items\"\n                        onChange={handleChange}\n                    />\n                    <button className=\"btn\" type=\"submit\">\n                        Add Items\n                    </button>\n                    <br></br>\n                    <br></br>\n                </form>\n                <div>\n                    {list.map((c, id) => ( // ws macht er hier genau\n                        <Item\n                            key={id}\n                            id={c.id}\n                            item={item}\n                            list={list}\n                            setList={setList}\n                            complete={c.complete}\n                            setItem={setItem}\n                        />\n                    ))}\n                </div>\n            </div>\n        ); */\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}