[{"/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/einkaufListeNew/src/index.js":"1","/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/einkaufListeNew/src/reportWebVitals.js":"2","/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/einkaufListeNew/src/Item.js":"3","/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/einkaufListeNew/src/App.js":"4","/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/einkaufListeNew/src/listElement.js":"5"},{"size":529,"mtime":1636371770504,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1625474561618,"results":"8","hashOfConfig":"7"},{"size":2914,"mtime":1636371859416,"results":"9","hashOfConfig":"7"},{"size":6342,"mtime":1636372029270,"results":"10","hashOfConfig":"7"},{"size":2213,"mtime":1636372029259,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"3cky0t",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/einkaufListeNew/src/index.js",["25"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Item from './Item';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/einkaufListeNew/src/reportWebVitals.js",[],"/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/einkaufListeNew/src/Item.js",[],"/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/einkaufListeNew/src/App.js",["26","27","28","29","30"],"/*import React, { useState } from \"react\";\nimport \"./App.css\"\nimport { v4 as uuidv4 } from \"uuid\";\nimport Item from \"./Item\";\n\nfunction App() {\n  const [item, setItem] = useState(\"\"); // was mache ich hier\n  const [list, setList] = useState([]);\n\n  const handleSubmit = (e) => {  // was macht e (eingabe?)\n    const newItem = {\n      id: uuidv4(), //generiert neine unice id\n      item: item,\n      complete: false,\n    };\n    e.preventDefault();\n    if (item) {\n      setList([...list, newItem]);\n      setItem(\"\");\n    }\n  };\n\n  const handleChange = (e) => {\n    setItem(e.target.value);\n  };\n\n  return (\n      <div className=\"App\">\n        <h1>Grocery List</h1>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" value={item} onChange={handleChange} />\n          <button type=\"submit\">ADD</button>\n        </form>\n      </div>\n  );\n}\n\nexport default App;\n*/\n\nimport axios from 'axios';\nimport React, { useState } from \"react\";\n\nimport \"./App.scss\";\n\nimport {Col, Container, Row} from \"react-bootstrap\";\n//import \"./Styles.css\";\n\nimport Item from \"./Item\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {ListElement} from \"./listElement\";\n\n/*const arr = () => {\n  let data = localStorage.getItem(\"data\");\n  //  return daten;\n  if (data) return JSON.parse(localStorage.getItem(\"data\")); // local storage muss raus\n  else return [];\n}; */\n\n\n\n/*function listenpunkt(){\n    const a = this.back();\n    console.log(this.back);\n    const punkt = a.map((o) =>\n        <li>{o}</li>);\n    console.log(punkt);\n    return punkt;\n} */\n\nlet ob = {}; //ist leer, render holt es sich bevor es  gefuellt ist und dato vorhanden ist\nclass App extends React.Component{ // es mit klasse versuchen\n // const [item, setItem] = useState(\"\"); // was passiet hier\n // const [list, setList] = useState(arr);\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            punkt: [],\n            amount: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n       // this.handleButton = this.handleButton.bind(this);\n\n        //this.handlePunktChange = this.handlePunktChange.bind(this);\n    }\n\n    componentDidMount() { //?\n        this.back();\n    }\n\n  //  const wertForm = null;\n/*     const handleClickEvent = () => {\n        const form = wertForm.current\n         alert(`${form['punkt'].value}`)\n         console.log(form.value);\n     } */\n\n    back () {\n        const promise = axios.get('http://127.0.0.1:8081/einkaufsListeElemente')\n        const daten = promise.then( wert => this.setState({punkt: wert.data})) //was mache ich hier genau // wert => ob.dato = wert.data\n        // const daten = promise.data;\n        console.log(this.state.punkt);\n\n\n    }\n\n\n  /*  handlePunktChange(event){\n        this.setState({punkt: ob.dato});\n        console.log(this.state.punkt);\n    } */\n\n\n\n\n     handleChange(event){\n       this.setState({value: event.target.value}) //warum geschweifte klammern\n         console.log(this.state.value);\n     }\n\n   handleSubmit = (event) =>{\n       event.preventDefault(); //event.preventDefault bei Submit behebt den fehler, eite wird nicht mehr selbstst√§ndig geladen\n       const s = this.state.value.split(/(\\d+)/);\n       const anzahl = s[s.length -2];\n       console.log(\"split: \" + anzahl);\n       console.log(\"ar: \" + s);\n       s.length =  s.length -2;\n\n       console.log(\"sL: \" + s.length + \"s: \" +s);\n        const p = s.toString();\n\n   console.log(\"target: \" + event.target[0].value);\n       axios({\n      method: 'post',\n      url: 'http://127.0.0.1:8081/einkaufsListe',\n      data: {\n        \"itId\": 100,\n        \"einkaufsPunkt\": p,\n        \"strich\": false,\n        \"amount\": anzahl,\n      },\n    })\n  };\n\n    handleNumber(a,e){\n        this.setState({amount: e.target.value});\n        console.log(\"nummber: \" +e.target.value);\n        e.preventDefault();\n        axios({\n            method: 'put',\n            url: 'http://127.0.0.1:8081/einkaufsListeAnzahlAendern',\n            data: {\n                \"itId\": a,\n                \"einkaufsPunkt\": \"platzhalterdatenloeschen\",\n                \"strich\": false,\n                \"amount\": e.target.value\n            },\n\n        })\n    }\n\n    handleButton(a,e){\n        console.log(a);\n       e.preventDefault();\n        axios({\n            method: 'delete',\n            url: 'http://127.0.0.1:8081/einkaufsListeElementLoeschen',\n            data: {\n                \"itId\": a,\n                \"einkaufsPunkt\": \"platzhalterdatenloeschen\",\n                \"strich\": false\n            },\n        })\n    }\n\n    handleDurchstreichen(a){\n        axios({\n            method: 'put',\n            url: 'http://127.0.0.1:8081/einkaufsListeDurchgestrichen',\n            data: {\n                \"itId\": a,\n                \"einkaufsPunkt\": \"platzhalterdatenloeschen\",\n                \"strich\": false\n            },\n        })\n\n    }\n\n    render() {\n\n        return (\n            <div className=\"App\">\n                <h1>Grocery List</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <input type=\"text\" id=\"inp\" value={this.state.value} onChange={this.handleChange}/>\n                    <input type=\"submit\" value=\"Button\"/>\n                </form>\n\n                <Container  >\n                <Row >{ this.state.punkt.map((a) =>  <Col   ><ListElement a={a} id={a.itId} />\n                </Col> )}</Row>\n\n\n\n                </Container>\n                    <div>\n                        {\"hallo\" +\n                        \"\"}\n                    </div>\n                <Container>\n                    <Row >{ this.state.punkt.map((a) =>  <Col   ><ListElement a={a} id={a.itId} />\n                    </Col> )}</Row>\n                </Container>\n\n\n\n            </div>\n        )\n    }\n\n}\n\nexport default App;\n\n/* <li key={a.itId.toString()}>{a.einkaufsPunkt}\n                <input type=\"number\" value={this.state.amount} onChange={(e) => this.handleNumber(a.itId,e)}/>\n                <button id=\"e\" onClick={(e) => this.handleButton(a.itId,e)}>Loeschen</button>\n                <input type=\"checkbox\" checked={a.strich}  onChange={(e) => this.handleDurchstreichen(a.itId)}  /></li> )}\n*/\n\n/*<div className=\"grid\">{ this.state.punkt.map((a) => <ListElement a={a} id={a.itId} />\n                    )}\n                </div>\n\n */","/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/einkaufListeNew/src/listElement.js",["31","32"],"import axios from 'axios';\nimport React, { useState } from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen } from '@fortawesome/free-solid-svg-icons';\nimport \"./Styles.scss\";\n\nexport function ListElement(props) {\n    const [amount, setAmount] = useState(props.a.amount);\n    //setAmount(props.a.amount);\n\n   /* useEffect(() => {\n\n    }) */\n\n   const handleNumber = (e) =>{\n        setAmount( e.target.value);\n        console.log(\"nummber: \" +e  + \"id: \" + props.a.itId);\n        //e.preventDefault();\n        axios({\n            method: 'put',\n            url: 'http://127.0.0.1:8081/einkaufsListeAnzahlAendern',\n            data: {\n                \"itId\": props.a.itId,\n                \"einkaufsPunkt\": \"platzhalterdatenloeschen\",\n                \"strich\": false,\n                \"amount\": e.target.value,\n            },\n\n        })\n    }\n\n   const handleButton = (e) =>{\n        console.log(\"l√∂schid: \" +props.a.itId);\n        e.preventDefault();\n        axios({\n            method: 'delete',\n            url: 'http://127.0.0.1:8081/einkaufsListeElementLoeschen',\n            data: {\n                \"itId\": props.a.itId,\n                \"einkaufsPunkt\": \"platzhalterdatenloeschen\",\n                \"strich\": false,\n                \"amount\": 1\n            },\n        })\n    }\n\n   const handleDurchstreichen =(a)=>{\n        axios({\n            method: 'put',\n            url: 'http://127.0.0.1:8081/einkaufsListeDurchgestrichen',\n            data: {\n                \"itId\": a,\n                \"einkaufsPunkt\": \"platzhalterdatenloeschen\",\n                \"strich\": false,\n                \"amount\": 1\n\n            },\n        })\n\n    }\n\n    return(\n\n\n        <div className=\"element\"  key={props.a.itId.toString()}>\n            <button><FontAwesomeIcon className=\"form-icon\" icon={faPen}/></button>\n            {props.a.einkaufsPunkt}\n\n            <input type=\"number\" value={amount} onChange={(e) => handleNumber(e)}/>\n            <button id=\"e\" onClick={(e) => handleButton(e)}>Loeschen</button>\n            <input type=\"checkbox\" checked={props.a.strich}  onChange={(e) => handleDurchstreichen(props.a.itId)}  /></div>\n\n    )\n}",{"ruleId":"33","severity":1,"message":"34","line":6,"column":8,"nodeType":"35","messageId":"36","endLine":6,"endColumn":12},{"ruleId":"33","severity":1,"message":"37","line":42,"column":17,"nodeType":"35","messageId":"36","endLine":42,"endColumn":25},{"ruleId":"33","severity":1,"message":"34","line":49,"column":8,"nodeType":"35","messageId":"36","endLine":49,"endColumn":12},{"ruleId":"33","severity":1,"message":"38","line":50,"column":16,"nodeType":"35","messageId":"36","endLine":50,"endColumn":22},{"ruleId":"33","severity":1,"message":"39","line":71,"column":5,"nodeType":"35","messageId":"36","endLine":71,"endColumn":7},{"ruleId":"33","severity":1,"message":"40","line":102,"column":15,"nodeType":"35","messageId":"36","endLine":102,"endColumn":20},{"ruleId":"33","severity":1,"message":"41","line":3,"column":9,"nodeType":"35","messageId":"36","endLine":3,"endColumn":12},{"ruleId":"33","severity":1,"message":"42","line":3,"column":14,"nodeType":"35","messageId":"36","endLine":3,"endColumn":17},"no-unused-vars","'Item' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'uuidv4' is defined but never used.","'ob' is assigned a value but never used.","'daten' is assigned a value but never used.","'Col' is defined but never used.","'Row' is defined but never used."]