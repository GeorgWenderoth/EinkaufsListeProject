{"ast":null,"code":"var _jsxFileName = \"/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/components/header/einkaufHeader.js\";\nimport { Button } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport \"./header.scss\";\nimport { ErrorMessage, Formik, Form, Field } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function EinkaufHeader(props) {\n  /**\n   * Übergibt eingabe (Itemname) an props.handleSubmit\n   * @param event\n   */\n\n  /* const handleSubmitHeader=(event)=>{\n       event.preventDefault(); //event.preventDefault  seite wird nicht mehr selbstständig geladen wegen onSubmit\n       props.handleSubmit(value.einkaufspunkt);\n   } */\n  const onSubmit = (values, _ref) => {\n    let {\n      setSubmitting\n    } = _ref;\n    props.handleSubmit(values.einkaufspunkt).finally(() => {\n      setSubmitting(false);\n    });\n  };\n  /**\n   * Überprüft ob die Eingaben korrekt sind, gibt Fehlermeldung aus wenn nicht\n   * @param values\n   * @returns {{}}\n   */\n\n\n  const validate = values => {\n    const errors = {};\n    console.log(\"Values: \", values);\n\n    if (!values.einkaufspunkt) {\n      errors.einkaufspunkt = \"Einkaufspunk is needed\";\n    }\n\n    if (/[^a-zA-Z0-9 -]+/g.test(values.einkaufspunkt)) {\n      errors.einkaufspunkt = 'Invalid Einkaufspunkt -> Keine Sonderzeichen';\n    }\n\n    if (!/[a-zA-Z]+/g.test(values.einkaufspunkt)) {\n      errors.einkaufspunkt = 'Mindestens ein buchstabe';\n    }\n\n    return errors;\n  };\n  /**\n   * speichert veränderungen bei der eingabe onChange im state\n   * @param event\n   */\n\n  /* const handleChange =(event) => {\n        setValue(event.target.value); //warum geschweifte klammern\n       // console.log(value);\n    } */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"ueberschrift\",\n      children: \"Digitale Einkaufsliste\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        einkaufspunkt: \"\"\n      },\n      validate: validate,\n      onSubmit: onSubmit,\n      children: [_ref2 => {\n        let {\n          isSubmitting,\n          errors,\n          values\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          className: \"row g-3 justify-content-center\"\n          /*className=\"addButton\"*/\n\n          /*onSubmit={handleSubmitHeader}*/\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-auto\",\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              name: \"einkaufspunkt\",\n              className: \"form-control\",\n              id: \"inp\",\n              placeholder: \"Einkaufspunkt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"einkaufspunkt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-auto\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"btn-secondary\",\n              children: \"Hinzuf\\xFCgen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this);\n      }, /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-secondary\",\n        children: \" Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-secondary\",\n      children: \" Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_c = EinkaufHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"EinkaufHeader\");","map":{"version":3,"sources":["/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/components/header/einkaufHeader.js"],"names":["Button","React","useState","ErrorMessage","Formik","Form","Field","EinkaufHeader","props","onSubmit","values","setSubmitting","handleSubmit","einkaufspunkt","finally","validate","errors","console","log","test","isSubmitting"],"mappings":"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","sourcesContent":["import {Button} from \"react-bootstrap\";\nimport React, {useState} from \"react\";\nimport \"./header.scss\";\nimport {ErrorMessage, Formik, Form, Field} from 'formik';\n\n\nexport function EinkaufHeader(props){\n\n\n\n    /**\n     * Übergibt eingabe (Itemname) an props.handleSubmit\n     * @param event\n     */\n   /* const handleSubmitHeader=(event)=>{\n        event.preventDefault(); //event.preventDefault  seite wird nicht mehr selbstständig geladen wegen onSubmit\n        props.handleSubmit(value.einkaufspunkt);\n    } */\n\n    const onSubmit = (values, { setSubmitting}) => {\n        props.handleSubmit(values.einkaufspunkt).finally( ()=> {\n            setSubmitting(false);\n        });\n\n    }\n    /**\n     * Überprüft ob die Eingaben korrekt sind, gibt Fehlermeldung aus wenn nicht\n     * @param values\n     * @returns {{}}\n     */\n    const validate = (values)=> {\n        const errors = {};\n        console.log(\"Values: \", values);\n        if(!values.einkaufspunkt){\n            errors.einkaufspunkt = \"Einkaufspunk is needed\"\n        }\n         if (/[^a-zA-Z0-9 -]+/g.test(values.einkaufspunkt)  ){\n            errors.einkaufspunkt = 'Invalid Einkaufspunkt -> Keine Sonderzeichen';\n        }\n         if(!/[a-zA-Z]+/g.test(values.einkaufspunkt) ){\n             errors.einkaufspunkt = 'Mindestens ein buchstabe'\n         }\n        return errors;\n    }\n\n    /**\n     * speichert veränderungen bei der eingabe onChange im state\n     * @param event\n     */\n  /* const handleChange =(event) => {\n        setValue(event.target.value); //warum geschweifte klammern\n       // console.log(value);\n    } */\n\n    return(\n        <div className=\"header\">\n            <h1 className=\"ueberschrift\">Digitale Einkaufsliste</h1>\n            <Formik initialValues={{einkaufspunkt: \"\"}} validate={validate} onSubmit={onSubmit}>\n                {\n                    ({\n                        isSubmitting,\n                        errors,\n                        values,\n\n\n                    }) => (\n                        <Form className=\"row g-3 justify-content-center\"/*className=\"addButton\"*/\n                            /*onSubmit={handleSubmitHeader}*/ >\n                            <div className=\"col-auto\">\n                                <Field type=\"text\" name={\"einkaufspunkt\"}  className=\"form-control\"  id=\"inp\" placeholder=\"Einkaufspunkt\"/>\n                                <ErrorMessage name={\"einkaufspunkt\"} />\n                            </div>\n                            <div className=\"col-auto\">\n                                <Button type=\"submit\" className=\"btn-secondary\">Hinzufügen</Button>\n                            </div>\n                        </Form>\n                    )\n\n\n                }\n                <Button className=\"btn-secondary\"> Login</Button>\n            </Formik>\n            <Button className=\"btn-secondary\"> Login</Button>\n        </div>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}