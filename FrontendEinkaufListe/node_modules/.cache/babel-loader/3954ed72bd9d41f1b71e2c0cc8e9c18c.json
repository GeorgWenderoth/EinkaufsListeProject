{"ast":null,"code":"var _jsxFileName = \"/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/components/header/einkaufHeader.js\";\nimport { Button } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport \"./header.scss\";\nimport { ErrorMessage, Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function EinkaufHeader(props) {\n  //const [value,setValue] = useState();\n\n  /**\n   * Übergibt eingabe (Itemname) an props.handleSubmit\n   * @param event\n   */\n  const handleSubmitHeader = event => {\n    event.preventDefault(); //event.preventDefault  seite wird nicht mehr selbstständig geladen wegen onSubmit\n\n    props.handleSubmit(values);\n  };\n\n  const validate = event => {\n    const errors = {};\n\n    if (!values.einkaufspunkt) {\n      errors.einkaufspunkt = \"Einkaufspunk is needed\";\n    } else if (!/^(?=\\D*\\d)[a-zA-Z0-9 -]+$/i.test(values.einkaufspunkt)) {\n      errors.einkaufspunkt = 'Invalid Einkaufspunkt';\n    }\n\n    return errors;\n  };\n  /**\n   * speichert veränderungen bei der eingabe onChange im state\n   * @param event\n   */\n\n\n  const handleChange = event => {\n    setValue(event.target.value); //warum geschweifte klammern\n    // console.log(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"ueberschrift\",\n      children: \"Digitale Einkaufsliste\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        einkaufspunkt: \"\"\n      },\n      validate: validate,\n      onSubmit: handleSubmitHeader,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"row g-3 justify-content-center\"\n        /*className=\"addButton\"*/\n\n        /*onSubmit={handleSubmitHeader}*/\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-auto\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"einkaufspunk\",\n            className: \"form-control\",\n            id: \"inp\",\n            placeholder: \"Einkaufspunkt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"einkaufspunkt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-auto\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: \"btn-secondary\",\n            children: \"Hinzuf\\xFCgen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_c = EinkaufHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"EinkaufHeader\");","map":{"version":3,"sources":["/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/components/header/einkaufHeader.js"],"names":["Button","React","useState","ErrorMessage","Formik","EinkaufHeader","props","handleSubmitHeader","event","preventDefault","handleSubmit","values","validate","errors","einkaufspunkt","test","handleChange","setValue","target","value"],"mappings":";AAAA,SAAQA,MAAR,QAAqB,iBAArB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,eAAP;AACA,SAAQC,YAAR,EAAsBC,MAAtB,QAAmC,QAAnC;;AAGA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAChC;;AAGA;AACJ;AACA;AACA;AACI,QAAMC,kBAAkB,GAAEC,KAAD,IAAS;AAC9BA,IAAAA,KAAK,CAACC,cAAN,GAD8B,CACN;;AACxBH,IAAAA,KAAK,CAACI,YAAN,CAAmBC,MAAnB;AACH,GAHD;;AAKA,QAAMC,QAAQ,GAAIJ,KAAD,IAAU;AACvB,UAAMK,MAAM,GAAG,EAAf;;AACA,QAAG,CAACF,MAAM,CAACG,aAAX,EAAyB;AACrBD,MAAAA,MAAM,CAACC,aAAP,GAAuB,wBAAvB;AACH,KAFD,MAGK,IAAI,CAAC,6BAA6BC,IAA7B,CAAkCJ,MAAM,CAACG,aAAzC,CAAL,EAA6D;AAC9DD,MAAAA,MAAM,CAACC,aAAP,GAAuB,uBAAvB;AACH;;AACD,WAAOD,MAAP;AACH,GATD;AAWA;AACJ;AACA;AACA;;;AACG,QAAMG,YAAY,GAAGR,KAAD,IAAW;AAC1BS,IAAAA,QAAQ,CAACT,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAR,CAD0B,CACI;AAC/B;AACF,GAHF;;AAKC,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,aAAa,EAAE;AAACL,QAAAA,aAAa,EAAE;AAAhB,OAAvB;AAA4C,MAAA,QAAQ,EAAEF,QAAtD;AAAgE,MAAA,QAAQ,EAAEL,kBAA1E;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC;AAAgC;;AAC1C;AADN;AAAA,gCAEI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAE,cAAzB;AAA0C,YAAA,SAAS,EAAC,cAApD;AAAoE,YAAA,EAAE,EAAC,KAAvE;AAA6E,YAAA,WAAW,EAAC;AAAzF;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,YAAD;AAAc,YAAA,IAAI,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAMI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;KAlDeF,a","sourcesContent":["import {Button} from \"react-bootstrap\";\nimport React, {useState} from \"react\";\nimport \"./header.scss\";\nimport {ErrorMessage, Formik} from 'formik';\n\n\nexport function EinkaufHeader(props){\n    //const [value,setValue] = useState();\n\n\n    /**\n     * Übergibt eingabe (Itemname) an props.handleSubmit\n     * @param event\n     */\n    const handleSubmitHeader=(event)=>{\n        event.preventDefault(); //event.preventDefault  seite wird nicht mehr selbstständig geladen wegen onSubmit\n        props.handleSubmit(values);\n    }\n\n    const validate = (event)=> {\n        const errors = {};\n        if(!values.einkaufspunkt){\n            errors.einkaufspunkt = \"Einkaufspunk is needed\"\n        }\n        else if (!/^(?=\\D*\\d)[a-zA-Z0-9 -]+$/i.test(values.einkaufspunkt)){\n            errors.einkaufspunkt = 'Invalid Einkaufspunkt';\n        }\n        return errors;\n    }\n\n    /**\n     * speichert veränderungen bei der eingabe onChange im state\n     * @param event\n     */\n   const handleChange =(event) => {\n        setValue(event.target.value); //warum geschweifte klammern\n       // console.log(value);\n    }\n\n    return(\n        <div className=\"header\">\n            <h1 className=\"ueberschrift\">Digitale Einkaufsliste</h1>\n            <Formik initialValues={{einkaufspunkt: \"\"}} validate={validate} onSubmit={handleSubmitHeader}>\n                <Form className=\"row g-3 justify-content-center\"/*className=\"addButton\"*/\n                      /*onSubmit={handleSubmitHeader}*/ >\n                    <div className=\"col-auto\">\n                        <Field type=\"text\" name={\"einkaufspunk\"}  className=\"form-control\"  id=\"inp\" placeholder=\"Einkaufspunkt\"/>\n                        <ErrorMessage name={\"einkaufspunkt\"} />\n                    </div>\n                    <div className=\"col-auto\">\n                        <Button type=\"submit\" className=\"btn-secondary\">Hinzufügen</Button>\n                    </div>\n                </Form>\n            </Formik>\n        </div>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}