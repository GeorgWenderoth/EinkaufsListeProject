{"ast":null,"code":"var _jsxFileName = \"/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/components/App.js\";\nimport React from \"react\";\nimport \"./App.scss\";\nimport { Button } from \"react-bootstrap\";\nimport { AxiosCalls } from \"../utils/axiosCalls\";\nimport { EinkaufHeader } from \"./header/einkaufHeader\";\nimport { BereichUeberschrift } from \"./ueberschrift/bereichUeberschrift\";\nimport { ContainerListe } from \"./liste/containerListe\"; //require('dotenv').config()\n\n/**\n * Main Component\n * Rendert alle anderen Components\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = value => {\n      if (value !== undefined) {\n        // || value !== \" \"   , /^(?=\\D*\\d)[a-zA-Z0-9 -]+$/\n        console.log(\"submitValue:\", value);\n        const trim = value.trim();\n        const split = trim.split(/(\\d+)/);\n        let anzahl;\n        console.log(\"anzahl Split: \", split[split.length - 2]);\n\n        if (split[split.length - 1] === \"\") {\n          anzahl = split[split.length - 2];\n          anzahl = parseInt(anzahl);\n          split.length = split.length - 2;\n        } else {\n          anzahl = 1;\n        }\n\n        let einkaufsPunkt = split.toString();\n        einkaufsPunkt = einkaufsPunkt.trim();\n        einkaufsPunkt = einkaufsPunkt.replace(/,/g, '');\n        console.log(\"p: \" + einkaufsPunkt);\n        let cPunkt = {\n          \"itId\": 100,\n          \"einkaufsPunkt\": einkaufsPunkt,\n          \"strich\": false,\n          \"amount\": anzahl\n        };\n        const promise = AxiosCalls('post', '/einkaufsListe', cPunkt);\n        promise.then(item => {\n          console.log(\"App: Post .then:\", item.data);\n          let punkt = [...this.state.punkt];\n          punkt.push(item.data);\n          this.setState({\n            punkt: punkt\n          });\n        });\n      }\n    };\n\n    this.state = {\n      value: '',\n      punkt: [],\n      punktErledigt: [],\n      amount: '',\n      showM: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.deleteAllDoneItems = this.deleteAllDoneItems.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"start\"); //  this.back();\n    // this.backEr();\n\n    this.backBoth();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(\"Update: Punkt: \", this.state.punkt);\n    console.log(\"Update: PunktER: \", this.state.punktErledigt);\n  }\n  /**\n   * Holt sich die Unerledigten Items vom Backend und setzt sie in state\n   */\n\n\n  back() {\n    const promise = AxiosCalls('get', '/einkaufsListeElementeNotDone', \"NotDone\");\n    promise.then(wert => {\n      console.log(\"back \", wert.data);\n      this.setState({\n        punkt: wert.data\n      });\n    });\n  }\n  /**\n   * Holt sich die Erledigten items vom Backend und setzt sie in state\n   */\n\n\n  backEr() {\n    const promise = AxiosCalls('get', '/einkaufsListeElementeDone', \"Done\");\n    promise.then(wert => {\n      console.log(\"backEr \", wert.data);\n      this.setState({\n        punktErledigt: wert.data\n      });\n    });\n  }\n\n  backBoth() {\n    let dataNotDone;\n    let dataDone;\n    let promise = AxiosCalls('get', '/einkaufsListeElementeNotDone', \"NotDone\");\n    promise.then(wert => {\n      dataNotDone = wert.data;\n    });\n    promise = AxiosCalls('get', '/einkaufsListeElementeDone', \"Done\");\n    promise.then(wert => {\n      dataDone = wert.data;\n      console.log(\"backBoth: \", dataNotDone, dataDone);\n      this.setState({\n        punkt: dataNotDone,\n        punktErledigt: dataDone\n      });\n    });\n  }\n  /**\n   * Man die eingabe konform, überprüft ob eine anzhal gegeben ist, speichert im state und backend\n   * @param value = Der String der Eingegeben wurde\n   */\n\n\n  /**\n   * Von child to parent component, Wird im Child  listElement aufgerufen und mit de übergeben werte wird im state in ein orbjekt geupadtet\n   * @param {number} id - id des obekts fürs backend\n   * @param {string} title - einkaufsPunkt (name des Artikels)\n   * @param  harken - sind die einkaufsPunkte erledigt oder nicht\n   * @param {number} anzahl - die anzahl wie of ein arteikel gekauft werden soll\n   * @param {string} notizen - Notizen / bemerkungen zum artikel\n   */\n  updatePunktInState(id, title, harken, anzahl, notizen) {\n    console.log(\"parameter: \" + id + \" \" + title + \" \" + anzahl + \" \" + notizen);\n    console.log(\"punkt \" + this.state.punkt[0]);\n    let punkt = [...this.state.punkt];\n    let i = punkt.map(a => a.itId).indexOf(id);\n    console.log(\"i: \" + i);\n    let cPunkt = { ...punkt[id]\n    };\n    cPunkt = {\n      \"itId\": id,\n      \"einkaufsPunkt\": title,\n      \"strich\": harken,\n      \"amount\": anzahl,\n      \"notizen\": notizen\n    };\n    punkt[i] = cPunkt;\n    this.setState({\n      punkt\n    });\n    console.log(\"punktTest: \" + id + \" \" + this.state.punkt[i].itId, this.state.punkt[i].einkaufsPunkt, this.state.punkt[i].notizen);\n  }\n  /**\n   * Updated den state wenn ein Item verschoben wird von unerledigt zu erledigt und andersherum\n   * @param id\n   * @param harken = ist ein einkauf erledigt oder nicht\n   */\n\n\n  updatePunktStrichDoneOrNot(id, harken) {\n    console.log(\"harken: \" + harken); // strichw wert muss noch geändert werden.\n\n    let punkt = [...this.state.punkt];\n    let indexItem = punkt.map(a => a.itId).indexOf(id);\n    let punktErledigt = [...this.state.punktErledigt];\n    let indexItemErledigt = punktErledigt.map(a => a.itId).indexOf(id);\n    let speicher;\n\n    if (harken) {\n      speicher = punktErledigt[indexItemErledigt];\n      speicher.strich = false;\n      punktErledigt.splice(indexItemErledigt, 1);\n      punkt.push(speicher);\n    } else {\n      speicher = punkt[indexItem];\n      speicher.strich = true;\n      punkt.splice(indexItem, 1);\n      punktErledigt.push(speicher);\n    }\n\n    this.setState({\n      punkt: punkt,\n      punktErledigt: punktErledigt\n    });\n  }\n  /**\n   *  Löscht alle erledigten Artikel /einkaufsPunkte\n   */\n\n\n  deleteAllDoneItems() {\n    AxiosCalls('delete', '/einkaufssListeElementeDoneLoeschen');\n    this.setState({\n      punktErledigt: []\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(EinkaufHeader, {\n        handleSubmit: value => this.handleSubmit(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BereichUeberschrift, {\n        ueberschrift: \"Zu erledigende Einkäufe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ContainerListe, {\n        itemList: this.state.punkt,\n        updatePunkt: (id, title, harken, anzahl, notizen) => this.updatePunktInState(id, title, harken, anzahl, notizen),\n        updateDoneOrNot: (id, harken) => this.updatePunktStrichDoneOrNot(id, harken)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BereichUeberschrift, {\n        ueberschrift: \"Erledigte Einkäufe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ContainerListe, {\n        itemList: this.state.punktErledigt,\n        updatePunkt: (id, title, harken, anzahl, notizen) => this.updatePunktInState(id, title, harken, anzahl, notizen),\n        updateDoneOrNot: (id, harken) => this.updatePunktStrichDoneOrNot(id, harken)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-row justify-content-center  \",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \" btn-secondary btn-sm mt-4 mb-4\",\n          onClick: this.deleteAllDoneItems,\n          children: \"Erledigte Eink\\xE4ufe l\\xF6schen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/components/App.js"],"names":["React","Button","AxiosCalls","EinkaufHeader","BereichUeberschrift","ContainerListe","App","Component","constructor","props","handleSubmit","value","undefined","console","log","trim","split","anzahl","length","parseInt","einkaufsPunkt","toString","replace","cPunkt","promise","then","item","data","punkt","state","push","setState","punktErledigt","amount","showM","bind","deleteAllDoneItems","componentDidMount","backBoth","componentDidUpdate","prevProps","prevState","snapshot","back","wert","backEr","dataNotDone","dataDone","updatePunktInState","id","title","harken","notizen","i","map","a","itId","indexOf","updatePunktStrichDoneOrNot","indexItem","indexItemErledigt","speicher","strich","splice","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.scss\";\nimport {Button} from \"react-bootstrap\";\nimport {AxiosCalls} from \"../utils/axiosCalls\";\nimport {EinkaufHeader} from \"./header/einkaufHeader\";\nimport {BereichUeberschrift} from \"./ueberschrift/bereichUeberschrift\";\nimport {ContainerListe} from \"./liste/containerListe\";\n\n//require('dotenv').config()\n\n/**\n * Main Component\n * Rendert alle anderen Components\n */\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            punkt: [],\n            punktErledigt: [],\n            amount: '',\n            showM: false,\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.deleteAllDoneItems = this.deleteAllDoneItems.bind(this);\n    }\n\n    componentDidMount() {\n        console.log(\"start\");\n      //  this.back();\n       // this.backEr();\n        this.backBoth();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log(\"Update: Punkt: \", this.state.punkt);\n        console.log(\"Update: PunktER: \", this.state.punktErledigt);\n    }\n\n    /**\n     * Holt sich die Unerledigten Items vom Backend und setzt sie in state\n     */\n    back() {\n        const promise = AxiosCalls('get', '/einkaufsListeElementeNotDone', \"NotDone\");\n        promise.then(wert => {\n            console.log(\"back \", wert.data);\n            this.setState({punkt: wert.data})\n        })\n    }\n\n    /**\n     * Holt sich die Erledigten items vom Backend und setzt sie in state\n     */\n    backEr() {\n        const promise = AxiosCalls('get', '/einkaufsListeElementeDone', \"Done\");\n        promise.then(wert => {\n            console.log(\"backEr \", wert.data);\n            this.setState({punktErledigt: wert.data})\n\n        })\n    }\n\n    backBoth() {\n        let dataNotDone;\n        let dataDone;\n        let promise = AxiosCalls('get', '/einkaufsListeElementeNotDone', \"NotDone\");\n\n        promise.then(wert => {\n            dataNotDone = wert.data;\n        })\n         promise = AxiosCalls('get', '/einkaufsListeElementeDone', \"Done\");\n        promise.then(wert => {\n            dataDone = wert.data;\n            console.log(\"backBoth: \", dataNotDone, dataDone);\n            this.setState({punkt: dataNotDone, punktErledigt: dataDone});\n\n        })\n\n\n\n    }\n\n\n    /**\n     * Man die eingabe konform, überprüft ob eine anzhal gegeben ist, speichert im state und backend\n     * @param value = Der String der Eingegeben wurde\n     */\n    handleSubmit = (value) => {\n        if (value !== undefined) { // || value !== \" \"   , /^(?=\\D*\\d)[a-zA-Z0-9 -]+$/\n            console.log(\"submitValue:\", value);\n            const trim = value.trim();\n            const split = trim.split(/(\\d+)/);\n            let anzahl;\n            console.log(\"anzahl Split: \", split[split.length -2]);\n            if (split[split.length - 1] === \"\") {\n                anzahl = split[split.length - 2];\n                anzahl = parseInt(anzahl);\n                split.length = split.length - 2;\n            } else {\n                anzahl = 1;\n            }\n\n\n\n            let einkaufsPunkt = split.toString();\n            einkaufsPunkt = einkaufsPunkt.trim();\n            einkaufsPunkt = einkaufsPunkt.replace(/,/g, '');\n            console.log(\"p: \" + einkaufsPunkt);\n            let cPunkt = {\n                \"itId\": 100,\n                \"einkaufsPunkt\": einkaufsPunkt,\n                \"strich\": false,\n                \"amount\": anzahl,\n            }\n\n            const promise = AxiosCalls('post', '/einkaufsListe', cPunkt);\n            promise.then(item => {\n                console.log(\"App: Post .then:\", item.data);\n                let punkt = [...this.state.punkt];\n                punkt.push(item.data);\n                this.setState({punkt: punkt});\n            });\n        }\n    }\n\n\n    /**\n     * Von child to parent component, Wird im Child  listElement aufgerufen und mit de übergeben werte wird im state in ein orbjekt geupadtet\n     * @param {number} id - id des obekts fürs backend\n     * @param {string} title - einkaufsPunkt (name des Artikels)\n     * @param  harken - sind die einkaufsPunkte erledigt oder nicht\n     * @param {number} anzahl - die anzahl wie of ein arteikel gekauft werden soll\n     * @param {string} notizen - Notizen / bemerkungen zum artikel\n     */\n    updatePunktInState(id, title, harken, anzahl, notizen) {\n        console.log(\"parameter: \" + id + \" \" + title + \" \" + anzahl + \" \" + notizen)\n        console.log(\"punkt \" + this.state.punkt[0]);\n        let punkt = [...this.state.punkt];\n        let i = punkt.map(a => a.itId).indexOf(id);\n        console.log(\"i: \" + i);\n        let cPunkt = {...punkt[id]};\n        cPunkt = {\n            \"itId\": id,\n            \"einkaufsPunkt\": title,\n            \"strich\": harken,\n            \"amount\": anzahl,\n            \"notizen\": notizen\n        }\n        punkt[i] = cPunkt;\n        this.setState({punkt});\n        console.log(\"punktTest: \" + id + \" \" + this.state.punkt[i].itId, this.state.punkt[i].einkaufsPunkt, this.state.punkt[i].notizen);\n    }\n\n    /**\n     * Updated den state wenn ein Item verschoben wird von unerledigt zu erledigt und andersherum\n     * @param id\n     * @param harken = ist ein einkauf erledigt oder nicht\n     */\n    updatePunktStrichDoneOrNot(id, harken) {\n\n        console.log(\"harken: \" + harken);// strichw wert muss noch geändert werden.\n        let punkt = [...this.state.punkt];\n        let indexItem = punkt.map(a => a.itId).indexOf(id);\n        let punktErledigt = [...this.state.punktErledigt];\n        let indexItemErledigt = punktErledigt.map(a => a.itId).indexOf(id);\n        let speicher;\n        if (harken) {\n            speicher = punktErledigt[indexItemErledigt];\n            speicher.strich = false;\n            punktErledigt.splice(indexItemErledigt, 1);\n            punkt.push(speicher)\n        } else {\n            speicher = punkt[indexItem];\n            speicher.strich = true;\n            punkt.splice(indexItem, 1);\n            punktErledigt.push(speicher);\n        }\n        this.setState({punkt: punkt, punktErledigt: punktErledigt});\n    }\n\n    /**\n     *  Löscht alle erledigten Artikel /einkaufsPunkte\n     */\n    deleteAllDoneItems() {\n       AxiosCalls('delete', '/einkaufssListeElementeDoneLoeschen');\n        this.setState({punktErledigt: []});\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <EinkaufHeader handleSubmit={(value) => this.handleSubmit(value)}/>\n                <BereichUeberschrift ueberschrift={\"Zu erledigende Einkäufe\"}/>\n                <ContainerListe itemList={this.state.punkt}\n                                updatePunkt={(id, title, harken, anzahl, notizen) => this.updatePunktInState(id, title, harken, anzahl, notizen)}\n                                updateDoneOrNot={(id, harken) => this.updatePunktStrichDoneOrNot(id, harken)}/>\n                <BereichUeberschrift ueberschrift={\"Erledigte Einkäufe\"}/>\n                <ContainerListe itemList={this.state.punktErledigt}\n                                updatePunkt={(id, title, harken, anzahl, notizen) => this.updatePunktInState(id, title, harken, anzahl, notizen)}\n                                updateDoneOrNot={(id, harken) => this.updatePunktStrichDoneOrNot(id, harken)}/>\n                <div className=\"d-flex flex-row justify-content-center  \">\n                    <Button className=\" btn-secondary btn-sm mt-4 mb-4\" onClick={this.deleteAllDoneItems}>Erledigte\n                        Einkäufe\n                        löschen</Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}