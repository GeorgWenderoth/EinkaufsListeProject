[{"/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/index.js":"1","/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/reportWebVitals.js":"2","/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/components/App.js":"3","/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/utils/axiosCalls.js":"4","/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/components/header/einkaufHeader.js":"5","/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/components/ueberschrift/bereichUeberschrift.js":"6","/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/components/liste/containerListe.js":"7","/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/components/liste/listItem/listElement.js":"8"},{"size":518,"mtime":1637768249275,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1625474561618,"results":"11","hashOfConfig":"10"},{"size":8608,"mtime":1637769746702,"results":"12","hashOfConfig":"10"},{"size":428,"mtime":1637763340831,"results":"13","hashOfConfig":"10"},{"size":1374,"mtime":1637763021833,"results":"14","hashOfConfig":"10"},{"size":286,"mtime":1637768176777,"results":"15","hashOfConfig":"10"},{"size":760,"mtime":1637768176772,"results":"16","hashOfConfig":"10"},{"size":5711,"mtime":1637768176758,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"4v0oqy",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/index.js",[],["38","39"],"/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/reportWebVitals.js",[],["40","41"],"/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/components/App.js",["42"],"/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/utils/axiosCalls.js",["43","44"],"import axios from 'axios';\nimport React, {useState} from \"react\";\n\n/**\n * Übernimmt die axios calls anhand der übergebenen parameter, und returnt das propmise / ergebnis\n * @param method\n * @param url\n * @param object\n * @returns {AxiosPromise}\n * @constructor\n */\nexport function AxiosCalls(method,url, object){\n   const call = axios({\n        method: method,\n        url: url,\n        data: object,\n    })\n    return call;\n}","/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/components/header/einkaufHeader.js",[],"/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/components/ueberschrift/bereichUeberschrift.js",[],"/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/components/liste/containerListe.js",[],"/Users/georgwenderoth/EinkaufsListeProject/FrontendEinkaufListe/src/components/liste/listItem/listElement.js",["45","46","47","48","49"],"import axios from 'axios';\nimport React, {useState} from \"react\";\nimport {Col, Row, Card, Button, Modal} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPen} from '@fortawesome/free-solid-svg-icons';\nimport \"../../../Styles.scss\";\nimport \"../../App.scss\";\nimport {AxiosCalls} from \"../../../utils/axiosCalls\";\n\n/**\n * Generiert ein Listen element / Item / einkaufspunkt mit den übergebenen werten\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nexport function ListElement(props) {\n    const [amount, setAmount] = useState(props.item.amount);\n    const [showM, setShowM] = useState(false);\n    const [titel, setTitel] = useState(props.item.einkaufsPunkt)\n    const [notes, setNotes] = useState(props.item.notizen === undefined ? 'notizen' : props.item.notizen);\n    const [displayButton, setDisplayButton] = useState(props.item.strich ? \"none\" : \"visible\");\n    const [displayColour, setDisplayColour] = useState(props.item.strich);\n\n    /**\n     * Speichert die Anzahl onchange in den State\n     * @param e\n     */\n    const handleNumber = (e) => {\n        setAmount(e.target.value);\n        console.log(\"nummber: \" + e + \"id: \" + props.item.itId);\n    }\n\n    /**\n     * Setzt im Backend durch AxiosCalls und im App state über props.updateDone ein Item auf erledigt\n     */\n    const einkaufErledigt = () => {\n        console.log(\"card or box klicked: \" + props.item.itId);\n        const ob = {\n            \"itId\": props.id,\n            \"einkaufsPunkt\": \"platzhalterdatenloeschen\",\n            \"strich\": false,\n            \"amount\": 1\n        }\n        AxiosCalls('put','http://127.0.0.1:8081/einkaufsListeDurchgestrichen',ob);\n        props.updateDoneOrNot(props.id, props.item.strich);\n\n    }\n\n    /**\n     * Schließt Modal und speichert die änderungen im Backend (AxiosCalls) und im Frontend State (props.updatePunkt)\n     */\n    const handleClose = () => {\n        console.log(\"notizen: \" + notes);\n       const ob = {\n           \"itId\": props.item.itId,\n           \"einkaufsPunkt\": titel,\n           \"strich\": false,\n           \"amount\": amount,\n           \"notizen\": notes\n       }\n       AxiosCalls('put','http://127.0.0.1:8081/einkaufsListeUpdateM', ob);\n\n        props.updatePunkt(props.item.itId, titel, false, amount, notes);\n        setShowM(false);\n    }\n\n    /**\n     * Schließt Modal nur, ohne zu speichernt, setzt Werte auf vorher zurück\n     */\n    const handleCloseWithoutSaving = () => {\n\n        setShowM(false);\n        setTitel(props.item.einkaufsPunkt);\n        setNotes(props.item.notizen);\n        setAmount(props.item.amount);\n    }\n\n\n    const handleShow = () => setShowM(true);\n    const handleText = (e) => setTitel(e.target.value);\n    const handleNotes = (e) => setNotes(e.target.value)\n\n    return (\n\n        <Card className={\"cardStyle \" + (displayColour ? 'cardColourGreen' : 'cardColourRed')}\n              style={{border: '3px', cursor: \"pointer\"}}\n              key={props.item.itId.toString()}>\n            <div className=\"buttonHull\">\n                <Button style={{display: displayButton}} onClick={handleShow}\n                        className=\"bearbeitungsButton\"><FontAwesomeIcon className=\"form-icon\" icon={faPen}/></Button>\n            </div>\n            <Modal show={showM} onHide={handleCloseWithoutSaving}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        Bearbeite Einkaufspunkt\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <div className=\"mb-3 row\">\n                            <label className=\"col-3 col-form-label\">Einkauf: </label>\n                            <div className=\"col-9\">\n                                <input className=\"form-control \" type=\"text\" onChange={handleText} value={titel}/>\n                            </div>\n                        </div>\n                        <div className=\"mb-3 row\">\n                            <label className=\"col-3 col-form-label\">Notizen: </label>\n                            <div className=\"col-9\">\n                                <input className=\"form-control\" type=\"text\"\n                                       placeholder=\"Notizen\"\n                                       onChange={handleNotes}\n                                       value={notes}/>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <label className=\" col-3 col-form-label\">Anzahl: </label>\n                            <div className=\"col-9\">\n                                <input className=\"form-control\" type=\"number\" value={amount}\n                                       onChange={(e) => handleNumber(e)}/>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer><Button variant=\"secondary\" size=\"sm\"\n                                      onClick={handleCloseWithoutSaving}>Abbrechen</Button>\n                    <Button variant=\"primary\" size=\"sm\" onClick={handleClose}>Änderung Speichern</Button>\n                </Modal.Footer>\n            </Modal>\n            <Card.Body onClick={(e) => einkaufErledigt()}>\n                <div className=\"logoHull\">\n                    <p className=\"logo\">{props.item.einkaufsPunkt[0]}</p>\n                </div>\n                <div className=\"punktHull\">\n                    <p className=\"punkt\">{props.item.einkaufsPunkt}</p> <p className=\"punktAmount\">{props.item.amount}</p>\n                </div>\n            </Card.Body>\n\n        </Card>\n\n    )\n}\n\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"50","replacedBy":"54"},{"ruleId":"52","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":144,"column":13,"nodeType":"58","messageId":"59","endLine":144,"endColumn":21},{"ruleId":"56","severity":1,"message":"60","line":2,"column":8,"nodeType":"58","messageId":"59","endLine":2,"endColumn":13},{"ruleId":"56","severity":1,"message":"61","line":2,"column":16,"nodeType":"58","messageId":"59","endLine":2,"endColumn":24},{"ruleId":"56","severity":1,"message":"62","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":13},{"ruleId":"56","severity":1,"message":"63","line":3,"column":9,"nodeType":"58","messageId":"59","endLine":3,"endColumn":12},{"ruleId":"56","severity":1,"message":"64","line":3,"column":14,"nodeType":"58","messageId":"59","endLine":3,"endColumn":17},{"ruleId":"56","severity":1,"message":"65","line":21,"column":27,"nodeType":"58","messageId":"59","endLine":21,"endColumn":43},{"ruleId":"56","severity":1,"message":"66","line":22,"column":27,"nodeType":"58","messageId":"59","endLine":22,"endColumn":43},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],["67"],["68"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'React' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'setDisplayButton' is assigned a value but never used.","'setDisplayColour' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]